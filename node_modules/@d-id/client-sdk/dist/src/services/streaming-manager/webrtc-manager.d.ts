import { ConnectionState, CreateStreamOptions, StreamEvents, StreamingManagerOptions } from '../../types';
import { createStreamingLogger, StreamingManager } from './common';

type DataChannelPayload = string | Record<string, unknown>;
export declare function mapConnectionState(state: RTCIceConnectionState): ConnectionState;
export declare const createParseDataChannelMessage: (log: ReturnType<typeof createStreamingLogger>) => (message: string) => {
    subject: StreamEvents;
    data: DataChannelPayload;
};
export declare function createWebRTCStreamingManager<T extends CreateStreamOptions>(agentId: string, streamOptions: T, { debug, callbacks, auth, baseURL, analytics }: StreamingManagerOptions): Promise<StreamingManager<T>>;
export type WebRTCStreamingManager<T extends CreateStreamOptions> = StreamingManager<T>;
export {};
